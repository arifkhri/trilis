import { zodResolver } from "@hookform/resolvers/zod";
import Head from "next/head";
import { useParams } from "next/navigation";
import { useForm } from 'react-hook-form';
import { useQuery } from "react-query";
import * as z from "zod"

import CheckoutForm from "@/components/CheckoutForm";
import ShippingAmount from "@/components/CheckoutForm/ShippingAmount";
import Header from "@/components/Header";
import ProductCard from "@/components/ProductCard";
import { Button } from "@/components/ui/Button";
import { Form } from "@/components/ui/Form";
import Loading from "@/components/ui/Loading";

import { siteConfig } from "@/constant/config";
import product from "@/integrations/product";
import { currency } from "@/utils";

import { IProduct } from "../../../global";

const CheckoutPage = () => {
  const params = useParams<{ id: string }>();

  const { data, isLoading } = useQuery({
    queryKey: ['productDetail'],
    queryFn: async () => {
      let data = await product.getDetail<IProduct>(params.id);

      const newData = {
        ...data,
        weight: Math.round(Math.random() * 10000), // weight on gram uom
        price: data?.price * 1000 // make idr price
      };

      return newData
    },
    enabled: !!params?.id
  });


  const formSchema = z.object({
    address: z.string().min(1, "Field wajib diisi"),
    province: z.string().min(1, "Field wajib diisi"),
    city: z.string().min(1, "Field wajib diisi")
  });

  const form = useForm({
    resolver: zodResolver(formSchema),
    defaultValues: {
      address: '',
      province: '',
      city: ''
    },
  });

  async function onSubmit(formValues) {
    console.log('ðŸš€ ~ formValues:', formValues);
  }

  return (
    <>
      <Head>
        <title>Checkout - {siteConfig.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="pt-6 px-2 pb-16 lg:max-w-7xl lg:pt-5">
        <Header />


        <div className="flex flex-col pt-5">
          <div className="flex">
            {
              isLoading ? (
                <Loading />
              ) : (
                <ProductCard
                  id={data?.id?.toString()}
                  title={data?.title}
                  weight={data?.weight}
                  thumbnail={data?.thumbnail}
                  price={data?.price}
                  description={data?.description}
                />
              )
            }

          </div>
          <div className="my-5 p-4 border rounded">
            <h4 className="text-base font-bold mb-3">Data Pengirim</h4>
            <h4 className="text-sm">Nama</h4>
            <p className="font-bold text-sm">Simple Cart</p>

            <h4 className="text-sm mt-2">Alamat</h4>
            <p className="font-bold text-sm">Jl. Pojok Utara No.100 no.15, Setiamanah, Kec. Cimahi Tengah, Kota Cimahi, Jawa Barat 40524, Indonesia</p>
          </div>

          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-3">
              <CheckoutForm form={form} />

              {/* summary */}
              <div className="border-t border-dashed pt-4 pb-10">
                <ShippingAmount form={form} weight={data?.weight} />

                <div className="flex justify-between">
                  <p className="text-sm">Sub Total</p>
                  <p className="font-bold text-sm">{currency('Rp ', data?.price.toString())}</p>
                </div>

                <div className="flex justify-between">
                  <p className="text-base text-red-700 font-bold">Total</p>
                  <p className="font-bold text-red-700 text-base">{currency('Rp ', (data?.price + 0).toString())}</p>
                </div>
              </div>


              <div className="flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2">
                <Button className="w-full" type="submit">Checkout</Button>
              </div>
            </form>
          </Form>
        </div>
      </div>
    </>
  )
}


export default CheckoutPage;
