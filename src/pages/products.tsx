import Head from "next/head";
import { useQuery } from 'react-query';

import Header from "@/components/Header";
import ProductCard from "@/components/ProductCard";
import Loading from "@/components/ui/Loading";

import { siteConfig } from "@/constant/config";
import product from '@/integrations/product';

import { IList, IProduct } from '../../global';

const PortfolioPage = () => {

  const { data = { products: [] }, isLoading } = useQuery({
    queryKey: ['productList'],
    queryFn: async () => {
      const data = await product.getList<IList<IProduct>>();

      data.products = data.products.map((product) => ({
        ...product,
        weight: Math.round(Math.random() * 10000), // weight on gram uom
        price: product.price * 1000 // make idr price
      }))

      return data
    },
  });

  return (
    <>
      <Head>
        <title>Home - {siteConfig.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="h-screen pt-6 px-2 pb-16 lg:grid lg:max-w-7xl lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:pt-5">
        <Header />

        <div className="pt-5">
          {
            isLoading ? (
              <div>
                <Loading />
              </div>
            ) : (
              data.products.length > 0 ? (
                <div className="grid grid-cols-1 lg:grid-cols-2 md:grid-cols-2 justify-items-center justify-center gap-y-20 gap-x-14 mt-10 mb-5">
                  {
                    data.products.map((product, index) => (
                      <ProductCard
                        key={index}
                        showCheckoutBtn={true}
                        id={product.id.toString()}
                        title={product.title}
                        thumbnail={product.thumbnail}
                        price={product.price}
                        description={product.description}
                      />
                    ))
                  }

                </div>
              ) : (
                <div className="flex-col border rounded p-3">
                  <p className="text-center" style={{ whiteSpace: 'pre-line' }}>
                    Belum ada data
                  </p>
                </div>
              )
            )
          }
        </div>

      </div>
    </>
  )
}


export default PortfolioPage;
